---
- name: "Create {{ env }} containers to run playbook for dummy server"
  hosts: localhost
  vars:
    deployserver_image_name: "deployserver_{{ env }}"
    deployserver_image_version: latest
    deployserver_container_name: "deployserver_{{ env }}"

  tasks:
    - name: Ensure image is created
      community.docker.docker_image:
        name: "{{ deployserver_image_name }}"
        build:
          nocache: true
          path: "{{ playbook_dir }}/platform-stack/deployserver"
        tag: "{{ deployserver_image_version }}"
        state: present
        source: build

    - name: Ensure container is running
      community.docker.docker_container:
        name: "{{ deployserver_container_name }}"
        image: "{{ deployserver_image_name }}:{{ deployserver_image_version }}"
        state: started
        restart: yes
        volumes:
          - /run/user/1000/podman/podman.sock:/run/podman/podman.sock
        env:
          CONTAINER_HOST: unix:///run/podman/podman.sock
        security_opts:
          - seccomp:unconfined
        devices:
          - /dev/fuse:/dev/fuse:rwm
        capabilities:
          - sys_admin
          - mknod
        ports:
          - "{{ immich_port }}:80"
          - "{{ ssh_port }}:22"

    - name: "Ensure {{ env }} inventory file is created"
      ansible.builtin.copy:
        content: |
          [configserver]
          localhost
          [configserver:vars]
          ansible_connection=local

          [deployserver]
          {{ deployserver_container_name }}
          [deployserver:vars]
          ansible_connection=docker
          ansible_ssh_user=root
          ansible_ssh_pass=root
          ansible_ssh_port={{ ssh_port }}
        dest: "{{ playbook_dir }}/inventory/{{ env }}.ini"
        force: true

    - name: Ensure new inventory entries are loaded
      ansible.builtin.meta: "refresh_inventory"

- name: Execute deployment
  ansible.builtin.import_playbook: deploy-prod.yaml

