---
- name: Ensure photoprism originals and storage location exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ photoprism_user }}"
    group: "{{ photoprism_user }}"
    mode: 0755
    recurse: true
  loop:
    - "{{ photoprism_originals_location }}"
    - "{{ photoprism_storage_location }}"

- name: Instantiate photoprism-server container
  ansible.builtin.include_role:
    name: infrastructure/container
  vars:
    container_name: photoprism_server
    container_image: "{{ photoprism_server_image }}"
    container_image_tag: "{{ photoprism_server_tag }}"
    container_env:
      PHOTOPRISM_ADMIN_USER: "{{ photoprism_admin_username }}" # admin login username
      PHOTOPRISM_ADMIN_PASSWORD: "{{ photoprism_admin_password }}" # initial admin password (8-72 characters)
      PHOTOPRISM_AUTH_MODE: "password" # authentication mode (public, password)
      PHOTOPRISM_DISABLE_TLS: "false" # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
      PHOTOPRISM_DEFAULT_TLS: "true" # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
      PHOTOPRISM_DEFAULT_LOCALE: "en" # default user interface language, e.g. "en" or "de"
      PHOTOPRISM_PLACES_LOCALE: "local" # location details language, e.g. "local", "en", or "de"
      PHOTOPRISM_SITE_URL: "http://localhost:2342/" # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_LOG_LEVEL: "info" # log level: trace, debug, info, warning, or error
      PHOTOPRISM_READONLY: "false" # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false" # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false" # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "true" # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false" # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false" # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "true" # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false" # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_VECTORS: "false" # disables vector graphics support
      PHOTOPRISM_DISABLE_RAW: "false" # disables indexing and conversion of RAW images
      PHOTOPRISM_RAW_PRESETS: "false" # enables applying user presets when converting RAW images (reduces performance)
      PHOTOPRISM_SIDECAR_YAML: "true" # creates YAML sidecar files to back up picture metadata
      PHOTOPRISM_BACKUP_ALBUMS: "true" # creates YAML files to back up album metadata
      PHOTOPRISM_BACKUP_DATABASE: "false" # creates regular backups based on the configured schedule
      PHOTOPRISM_DETECT_NSFW: "false" # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true" # allows uploads that MAY be offensive (no effect without TensorFlow)
      PHOTOPRISM_UPLOAD_ARCHIVES: "true" # allows upload of zip archives (will be extracted before import)
      PHOTOPRISM_UPLOAD_LIMIT: 5000 # maximum size of uploaded files and uncompressed archive contents in MB
      PHOTOPRISM_ORIGINALS_LIMIT: 5000 # maximum size of original media files in MB (larger files are skipped)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip" # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DATABASE_DRIVER: "mysql" # MariaDB 10.5.12+ (MySQL successor) offers significantly better performance compared to SQLite
      PHOTOPRISM_DATABASE_SERVER: "database:3306" # MariaDB database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "{{ photoprism_db_database_name }}" # MariaDB database, see MARIADB_DATABASE in the mariadb service
      PHOTOPRISM_DATABASE_USER: "{{ photoprism_db_username }}" # MariaDB database username, must be the same as MARIADB_USER
      PHOTOPRISM_DATABASE_PASSWORD: "{{ photoprism_db_password }}" # MariaDB database password, must be the same as MARIADB_PASSWORD
      PHOTOPRISM_INIT: "https tensorflow" # options: update https tensorflow tensorflow-gpu intel gpu davfs yt-dlp
      PHOTOPRISM_ORIGINALS_PATH: "/var/photoprism/originals"
      PHOTOPRISM_STORAGE_PATH: "/var/photoprism/storage"
    container_volumes:
      - "{{ photoprism_originals_location }}:/var/photoprism/originals"
      - "{{ photoprism_storage_location }}:/var/photoprism/storage"
    container_ports:
      - "{{ photoprism_server_port }}:2342"
    container_networks:
      - "{{ photoprism_network }}"
    container_network_aliases:
      - photoprism-server
    container_user: "{{ photoprism_user }}"

- ansible.builtin.include_role:
    name: infrastructure/http-healthcheck
  vars:
    service_name: photoprism
    service_port: "{{ photoprism_server_port }}"

