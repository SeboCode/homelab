---
- name: Ensure nextcloud data and config location exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ nextcloud_user }}"
    group: "{{ nextcloud_user }}"
    mode: 0755
    recurse: true
  loop:
    - "{{ nextcloud_apache_config_location }}"
    - "{{ nextcloud_config_location }}"
    - "{{ nextcloud_data_location }}"

- name: Ensure apache configs for none root port usage are available for mounting
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ nextcloud_apache_config_location }}"
  loop:
    - "ports.conf"
    - "000-default.conf"

- name: Instantiate nextcloud-server container
  ansible.builtin.include_role:
    name: infrastructure/container
  vars:
    container_name: nextcloud_server
    container_image: "{{ nextcloud_server_image }}"
    container_image_tag: "{{ nextcloud_server_tag }}"
    container_env:
      POSTGRES_HOST: database
      POSTGRES_DB: "{{ nextcloud_db_database_name }}"
      POSTGRES_USER: "{{ nextcloud_db_username }}"
      POSTGRES_PASSWORD: "{{ nextcloud_db_password }}"
      # TODO: Activate once https://github.com/nextcloud/docker/issues/763 is fixed
      # REDIS_HOST: redis
      NEXTCLOUD_ADMIN_USER: "{{ nextcloud_admin_username }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
      NEXTCLOUD_DATA_DIR: "/var/lib/nextcloud"
    container_volumes:
      - "{{ nextcloud_apache_config_location }}/ports.conf:/etc/apache2/ports.conf"
      - "{{ nextcloud_apache_config_location }}/000-default.conf:/etc/apache2/sites-available/000-default.conf"
      - "{{ nextcloud_config_location }}:/var/www/html:rw"
      - "{{ nextcloud_data_location }}:/var/lib/nextcloud:rw"
    container_ports:
      - "{{ nextcloud_server_port }}:8080"
    container_networks:
      - "{{ nextcloud_network }}"
    container_network_aliases:
      - nextcloud-server
    container_user: "{{ nextcloud_user }}"

- ansible.builtin.include_role:
    name: infrastructure/http-healthcheck
  vars:
    service_name: nextcloud
    service_port: "{{ nextcloud_server_port }}"

- name: Ensure nextcloud users exist
  containers.podman.podman_container_exec:
    name: nextcloud_server
    command: >
      bash -c 'export NC_PASS="{{ nextcloud_user_default_password }}" && php occ user:add --password-from-env --display-name "{{ item.display_name }}" --group "user" {{ item.username }}'
  loop: "{{ nextcloud_user_definitions }}"
  ignore_errors: true

